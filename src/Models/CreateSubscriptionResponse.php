<?php

// This file was generated by liblab | https://liblab.com/

namespace Dodopayments\Models;

use Symfony\Component\Serializer\Annotation\SerializedName;

class CreateSubscriptionResponse
{
    /**
     * @var AddonCartResponseItem[]
     * Addons associated with this subscription
     */
    #[SerializedName('addons')]
    public array $addons;

    /**
	 * Client secret used to load Dodo checkout SDK
NOTE : Dodo checkout SDK will be coming soon
	 */
    #[SerializedName('client_secret')]
    public ?string $clientSecret;

    #[SerializedName('customer')]
    public CustomerLimitedDetailsResponse $customer;

    /**
     * The discount id if discount is applied
     */
    #[SerializedName('discount_id')]
    public ?string $discountId;

    #[SerializedName('metadata')]
    public array $metadata;

    /**
     * First payment id for the subscription
     */
    #[SerializedName('payment_id')]
    public string $paymentId;

    /**
     * URL to checkout page
     */
    #[SerializedName('payment_link')]
    public ?string $paymentLink;

    /**
     * Tax will be added to the amount and charged to the customer on each billing cycle
     */
    #[SerializedName('recurring_pre_tax_amount')]
    public int $recurringPreTaxAmount;

    /**
     * Unique identifier for the subscription
     */
    #[SerializedName('subscription_id')]
    public string $subscriptionId;

    public function __construct(
        array $addons,
        ?string $clientSecret = null,
        CustomerLimitedDetailsResponse $customer,
        ?string $discountId = null,
        array $metadata,
        string $paymentId,
        ?string $paymentLink = null,
        int $recurringPreTaxAmount,
        string $subscriptionId
    ) {
        $this->addons = $addons;
        $this->clientSecret = $clientSecret;
        $this->customer = $customer;
        $this->discountId = $discountId;
        $this->metadata = $metadata;
        $this->paymentId = $paymentId;
        $this->paymentLink = $paymentLink;
        $this->recurringPreTaxAmount = $recurringPreTaxAmount;
        $this->subscriptionId = $subscriptionId;
    }
}
