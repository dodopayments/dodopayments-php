<?php

// This file was generated by liblab | https://liblab.com/

namespace Dodopayments\Models;

use Symfony\Component\Serializer\Annotation\SerializedName;

class CreateOneTimePaymentRequest
{
    #[SerializedName('billing')]
    public BillingAddress $billing;

    #[SerializedName('customer')]
    public CustomerRequest $customer;

    /**
     * Discount Code to apply to the transaction
     */
    #[SerializedName('discount_code')]
    public ?string $discountCode;

    #[SerializedName('metadata')]
    public ?array $metadata;

    /**
     * Whether to generate a payment link. Defaults to false if not specified.
     */
    #[SerializedName('payment_link')]
    public ?bool $paymentLink;

    /**
     * @var OneTimeProductCartItemReq[]
     * List of products in the cart. Must contain at least 1 and at most 100 items.
     */
    #[SerializedName('product_cart')]
    public array $productCart;

    /**
	 * Optional URL to redirect the customer after payment.
Must be a valid URL if provided.
	 */
    #[SerializedName('return_url')]
    public ?string $returnUrl;

    /**
     * Tax ID in case the payment is B2B. If tax id validation fails the payment creation will fail
     */
    #[SerializedName('tax_id')]
    public ?string $taxId;

    public function __construct(
        BillingAddress $billing,
        CustomerRequest $customer,
        ?string $discountCode = null,
        ?array $metadata = [],
        ?bool $paymentLink = null,
        array $productCart,
        ?string $returnUrl = null,
        ?string $taxId = null
    ) {
        $this->billing = $billing;
        $this->customer = $customer;
        $this->discountCode = $discountCode;
        $this->metadata = $metadata;
        $this->paymentLink = $paymentLink;
        $this->productCart = $productCart;
        $this->returnUrl = $returnUrl;
        $this->taxId = $taxId;
    }
}
