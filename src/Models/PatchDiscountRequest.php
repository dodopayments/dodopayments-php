<?php

// This file was generated by liblab | https://liblab.com/

namespace Dodopayments\Models;

use Symfony\Component\Serializer\Annotation\SerializedName;

/**
 * Request body for patching (updating) a discount.

All fields are optional and only update if provided.
 */
class PatchDiscountRequest
{
    /**
	 * If present, update the discount amount:
- If `discount_type` is `percentage`, this represents ``basis points`` (e.g., `540` = `5.4%`).
- Otherwise, this represents ``USD cents`` (e.g., `100` = `$1.00`).

Must be at least 1 if provided.
	 */
    #[SerializedName('amount')]
    public ?int $amount;

    /**
     * If present, update the discount code (uppercase).
     */
    #[SerializedName('code')]
    public ?string $code;

    #[SerializedName('expires_at')]
    public ?string $expiresAt;

    #[SerializedName('name')]
    public ?string $name;

    /**
	 * @var string[]|null
	 * If present, replaces all restricted product IDs with this new set.
To remove all restrictions, send empty array
	 */
    #[SerializedName('restricted_to')]
    public ?array $restrictedTo;

    /**
	 * Number of subscription billing cycles this discount is valid for.
If not provided, the discount will be applied indefinitely to
all recurring payments related to the subscription.
	 */
    #[SerializedName('subscription_cycles')]
    public ?int $subscriptionCycles;

    #[SerializedName('type')]
    public ?PatchDiscountRequestType $type;

    #[SerializedName('usage_limit')]
    public ?int $usageLimit;

    public function __construct(
        ?int $amount = null,
        ?string $code = null,
        ?string $expiresAt = null,
        ?string $name = null,
        ?array $restrictedTo = [],
        ?int $subscriptionCycles = null,
        ?PatchDiscountRequestType $type = null,
        ?int $usageLimit = null
    ) {
        $this->amount = $amount;
        $this->code = $code;
        $this->expiresAt = $expiresAt;
        $this->name = $name;
        $this->restrictedTo = $restrictedTo;
        $this->subscriptionCycles = $subscriptionCycles;
        $this->type = $type;
        $this->usageLimit = $usageLimit;
    }
}
