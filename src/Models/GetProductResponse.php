<?php

// This file was generated by liblab | https://liblab.com/

namespace Dodopayments\Models;

use Symfony\Component\Serializer\Annotation\SerializedName;

class GetProductResponse
{
    /**
     * @var string[]|null
     * Available Addons for subscription products
     */
    #[SerializedName('addons')]
    public ?array $addons;

    /**
     * Unique identifier for the business to which the product belongs.
     */
    #[SerializedName('business_id')]
    public string $businessId;

    /**
     * Timestamp when the product was created.
     */
    #[SerializedName('created_at')]
    public string $createdAt;

    /**
     * Description of the product, optional.
     */
    #[SerializedName('description')]
    public ?string $description;

    /**
     * URL of the product image, optional.
     */
    #[SerializedName('image')]
    public ?string $image;

    /**
     * Indicates if the product is recurring (e.g., subscriptions).
     */
    #[SerializedName('is_recurring')]
    public bool $isRecurring;

    /**
     * Message sent upon license key activation, if applicable.
     */
    #[SerializedName('license_key_activation_message')]
    public ?string $licenseKeyActivationMessage;

    /**
     * Limit on the number of activations for the license key, if enabled.
     */
    #[SerializedName('license_key_activations_limit')]
    public ?int $licenseKeyActivationsLimit;

    #[SerializedName('license_key_duration')]
    public ?LicenseKeyDuration $licenseKeyDuration;

    /**
     * Indicates whether the product requires a license key.
     */
    #[SerializedName('license_key_enabled')]
    public bool $licenseKeyEnabled;

    /**
     * Name of the product, optional.
     */
    #[SerializedName('name')]
    public ?string $name;

    #[SerializedName('price')]
    public Price $price;

    /**
     * Unique identifier for the product.
     */
    #[SerializedName('product_id')]
    public string $productId;

    /**
     * Represents the different categories of taxation applicable to various products and services.
     */
    #[SerializedName('tax_category')]
    public TaxCategory $taxCategory;

    /**
     * Timestamp when the product was last updated.
     */
    #[SerializedName('updated_at')]
    public string $updatedAt;

    public function __construct(
        ?array $addons = [],
        string $businessId,
        string $createdAt,
        ?string $description = null,
        ?string $image = null,
        bool $isRecurring,
        ?string $licenseKeyActivationMessage = null,
        ?int $licenseKeyActivationsLimit = null,
        ?LicenseKeyDuration $licenseKeyDuration = null,
        bool $licenseKeyEnabled,
        ?string $name = null,
        Price $price,
        string $productId,
        TaxCategory $taxCategory,
        string $updatedAt
    ) {
        $this->addons = $addons;
        $this->businessId = $businessId;
        $this->createdAt = $createdAt;
        $this->description = $description;
        $this->image = $image;
        $this->isRecurring = $isRecurring;
        $this->licenseKeyActivationMessage = $licenseKeyActivationMessage;
        $this->licenseKeyActivationsLimit = $licenseKeyActivationsLimit;
        $this->licenseKeyDuration = $licenseKeyDuration;
        $this->licenseKeyEnabled = $licenseKeyEnabled;
        $this->name = $name;
        $this->price = $price;
        $this->productId = $productId;
        $this->taxCategory = $taxCategory;
        $this->updatedAt = $updatedAt;
    }
}
