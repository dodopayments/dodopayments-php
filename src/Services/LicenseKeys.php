<?php

// This file was generated by liblab | https://liblab.com/

namespace Dodopayments\Services;

use Dodopayments\Utils\Serializer;
use Dodopayments\Models;

class LicenseKeys extends BaseService
{
    public function listLicenseKeyInstances(
        int $pageSize = null,
        int $pageNumber = null,
        string $licenseKeyId = null
    ): Models\ListLicenseKeyInstancesResponse {
        $data = $this->sendRequest('get', '/license_key_instances', [
            'query' => [
                'page_size' => $pageSize,
                'page_number' => $pageNumber,
                'license_key_id' => $licenseKeyId,
            ],
        ]);

        return Serializer::deserialize($data, Models\ListLicenseKeyInstancesResponse::class);
    }

    public function getLicenseKeyInstance(string $id): Models\LicenseKeyInstanceResponse
    {
        $data = $this->sendRequest('get', "/license_key_instances/{$id}", []);

        return Serializer::deserialize($data, Models\LicenseKeyInstanceResponse::class);
    }

    public function updateLicenseKeyInstance(
        Models\PatchLicenseKeyInstanceRequest $input,
        string $id
    ): Models\LicenseKeyInstanceResponse {
        $data = $this->sendRequest('patch', "/license_key_instances/{$id}", ['json' => Serializer::serialize($input)]);

        return Serializer::deserialize($data, Models\LicenseKeyInstanceResponse::class);
    }

    public function listLicenseKeysHandler(
        int $pageSize = null,
        int $pageNumber = null,
        string $customerId = null,
        Models\LicenseKeyStatus $status = null,
        string $productId = null
    ): Models\ListLicenseKeysResponse {
        $data = $this->sendRequest('get', '/license_keys', [
            'query' => [
                'page_size' => $pageSize,
                'page_number' => $pageNumber,
                'customer_id' => $customerId,
                'status' => $status,
                'product_id' => $productId,
            ],
        ]);

        return Serializer::deserialize($data, Models\ListLicenseKeysResponse::class);
    }

    public function getLicenseKeyHandler(string $id): Models\LicenseKeyResponse
    {
        $data = $this->sendRequest('get', "/license_keys/{$id}", []);

        return Serializer::deserialize($data, Models\LicenseKeyResponse::class);
    }

    public function updateLicenseKey(Models\PatchLicenseKeyRequest $input, string $id): Models\LicenseKeyResponse
    {
        $data = $this->sendRequest('patch', "/license_keys/{$id}", ['json' => Serializer::serialize($input)]);

        return Serializer::deserialize($data, Models\LicenseKeyResponse::class);
    }
}
