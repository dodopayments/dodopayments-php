<?php

// This file was generated by liblab | https://liblab.com/

namespace Dodopayments\Services;

use Dodopayments\Utils\Serializer;
use Dodopayments\Models;

class Addons extends BaseService
{
    public function listAddons(int $pageSize = null, int $pageNumber = null): Models\AddonsListResponse
    {
        $data = $this->sendRequest('get', '/addons', [
            'query' => [
                'page_size' => $pageSize,
                'page_number' => $pageNumber,
            ],
        ]);

        return Serializer::deserialize($data, Models\AddonsListResponse::class);
    }

    public function createAddon(Models\CreateAddonRequest $input): Models\AddonResponse
    {
        $data = $this->sendRequest('post', '/addons', ['json' => Serializer::serialize($input)]);

        return Serializer::deserialize($data, Models\AddonResponse::class);
    }

    public function getAddonHandler(string $id): Models\AddonResponse
    {
        $data = $this->sendRequest('get', "/addons/{$id}", []);

        return Serializer::deserialize($data, Models\AddonResponse::class);
    }

    public function patchAddon(Models\PatchAddonRequest $input, string $id): Models\AddonResponse
    {
        $data = $this->sendRequest('patch', "/addons/{$id}", ['json' => Serializer::serialize($input)]);

        return Serializer::deserialize($data, Models\AddonResponse::class);
    }

    public function updateAddonImage(string $id): Models\UpdateAddonImageResponse
    {
        $data = $this->sendRequest('put', "/addons/{$id}/images", []);

        return Serializer::deserialize($data, Models\UpdateAddonImageResponse::class);
    }
}
