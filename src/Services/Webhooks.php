<?php

// This file was generated by liblab | https://liblab.com/

namespace Dodopayments\Services;

use Dodopayments\Utils\Serializer;
use Dodopayments\Models;

class Webhooks extends BaseService
{
    public function listWebhooks(int $limit = null, string $iterator = null): Models\ListWebhooksResponse
    {
        $data = $this->sendRequest('get', '/webhooks', [
            'query' => [
                'limit' => $limit,
                'iterator' => $iterator,
            ],
        ]);

        return Serializer::deserialize($data, Models\ListWebhooksResponse::class);
    }

    public function createWebhook(Models\CreateWebhookRequest $input): Models\WebhookDetails
    {
        $data = $this->sendRequest('post', '/webhooks', ['json' => Serializer::serialize($input)]);

        return Serializer::deserialize($data, Models\WebhookDetails::class);
    }

    public function getWebhook(string $webhookId): Models\WebhookDetails
    {
        $data = $this->sendRequest('get', "/webhooks/{$webhookId}", []);

        return Serializer::deserialize($data, Models\WebhookDetails::class);
    }

    public function patchWebhook(Models\PatchWebhookRequest $input, string $webhookId): Models\WebhookDetails
    {
        $data = $this->sendRequest('patch', "/webhooks/{$webhookId}", ['json' => Serializer::serialize($input)]);

        return Serializer::deserialize($data, Models\WebhookDetails::class);
    }

    public function deleteWebhook(string $webhookId): mixed
    {
        $data = $this->sendRequest('delete', "/webhooks/{$webhookId}", []);

        return json_decode($data, true);
    }

    public function getWebhookHeaders(string $webhookId): Models\GetWebhookHeadersResponse
    {
        $data = $this->sendRequest('get', "/webhooks/{$webhookId}/headers", []);

        return Serializer::deserialize($data, Models\GetWebhookHeadersResponse::class);
    }

    public function patchWebhookHeaders(Models\WebhookHeadersReq $input, string $webhookId): mixed
    {
        $data = $this->sendRequest('patch', "/webhooks/{$webhookId}/headers", [
            'json' => Serializer::serialize($input),
        ]);

        return json_decode($data, true);
    }
}
