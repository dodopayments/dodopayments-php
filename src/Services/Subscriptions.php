<?php

// This file was generated by liblab | https://liblab.com/

namespace Dodopayments\Services;

use Dodopayments\Utils\Serializer;
use Dodopayments\Models;

class Subscriptions extends BaseService
{
    public function listSubscriptionsHandler(
        string $createdAtGte = null,
        string $createdAtLte = null,
        int $pageSize = null,
        int $pageNumber = null,
        string $customerId = null,
        Models\SubscriptionStatus $status = null,
        string $brandId = null
    ): Models\GetSubscriptionsListResponse {
        $data = $this->sendRequest('get', '/subscriptions', [
            'query' => [
                'created_at_gte' => $createdAtGte,
                'created_at_lte' => $createdAtLte,
                'page_size' => $pageSize,
                'page_number' => $pageNumber,
                'customer_id' => $customerId,
                'status' => $status,
                'brand_id' => $brandId,
            ],
        ]);

        return Serializer::deserialize($data, Models\GetSubscriptionsListResponse::class);
    }

    public function createSubscriptionHandler(
        Models\CreateSubscriptionRequest $input
    ): Models\CreateSubscriptionResponse {
        $data = $this->sendRequest('post', '/subscriptions', ['json' => Serializer::serialize($input)]);

        return Serializer::deserialize($data, Models\CreateSubscriptionResponse::class);
    }

    public function getSubscriptionHandler(string $subscriptionId): Models\SubscriptionResponse
    {
        $data = $this->sendRequest('get', "/subscriptions/{$subscriptionId}", []);

        return Serializer::deserialize($data, Models\SubscriptionResponse::class);
    }

    public function patchSubscriptionHandler(
        Models\PatchSubscriptionRequest $input,
        string $subscriptionId
    ): Models\SubscriptionResponse {
        $data = $this->sendRequest('patch', "/subscriptions/{$subscriptionId}", [
            'json' => Serializer::serialize($input),
        ]);

        return Serializer::deserialize($data, Models\SubscriptionResponse::class);
    }

    public function updateSubscriptionPlanHandler(
        Models\UpdateSubscriptionPlanReq $input,
        string $subscriptionId
    ): mixed {
        $data = $this->sendRequest('post', "/subscriptions/{$subscriptionId}/change-plan", [
            'json' => Serializer::serialize($input),
        ]);

        return json_decode($data, true);
    }

    public function createSubscriptionCharge(
        Models\CreateSubscriptionChargeRequest $input,
        string $subscriptionId
    ): Models\CreateSubscriptionChargeResponse {
        $data = $this->sendRequest('post', "/subscriptions/{$subscriptionId}/charge", [
            'json' => Serializer::serialize($input),
        ]);

        return Serializer::deserialize($data, Models\CreateSubscriptionChargeResponse::class);
    }
}
